name: Linting
on:
  workflow_call:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache Go build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ${{ env.GOPATH }}/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-cache-${{ runner.os }}-

      - name: Cache commit-lint binary
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/bin/commit-lint
          key: commit-lint-binary-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: commit-lint-binary-${{ runner.os }}-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install commit-lint
        run: |
          GO111MODULE=on go install github.com/takara-ai/commit-lint@latest

      - name: Run commit-lint
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch --no-tags --depth=1 origin ${{ github.event.pull_request.base.ref }}
            commit-lint --range origin/${{ github.event.pull_request.base.ref }}..HEAD
          else
            commit-lint
          fi
        env:
          ALLOW_CAPITAL_SUBJECT: "true"

  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Ruff
        if: hashFiles('**/*.py') != ''
        uses: astral-sh/ruff-action@v3
        with:
          args: check --output-format=github

  golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        if: hashFiles('**/*.go') != ''
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run golangci-lint
        if: hashFiles('**/*.go') != ''
        uses: golangci/golangci-lint-action@v8

  js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        if: hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') != ''
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Run Biome
        if: hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') != ''
        run: biome ci --reporter=github .
